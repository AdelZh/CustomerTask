Passport passport11 = new Passport(20, "Dubai", "Female");
        Passport passport1=new Passport(18, "Japan", "Male");



        Bank bank = new Bank("AdelZh", 12345, 150);
        Bank bank1=new Bank("AzizZh", 5678, 200);


        Product product11 = new Product("Coca Cola", "Beverage", 234, 100, 2023, "No");
        Product product12 = new Product("Fanta", "Beverage", 89, 890, 2023, "Yes");
        Product product13=new Product("Pepsi", "Beverage", 89, 456, 2022, "No");
        Product product14=new Product("KFC", "Beverage", 77, 5, 2022, "Yes");
        Product product15=new Product("Mac", "Beverage", 90, 67, 2023, "No");

        Product [] products={product11, product12};
        Product [] products1={product13, product14};

        Customer customer=new Customer("Elina", products, bank, passport11);
       Customer customer1=new Customer("Alina", products1, bank1, passport1);
       Customer customer2=new Customer("Alibek", products, bank1, passport1);


       System.out.println(Arrays.toString( customer.addProduct(product15)));
        System.out.println("--------------------------------------");


        System.out.println("Print the customers of your products");
        customer.getAllCustomer("Coca Cola");
        customer1.getAllCustomer("KFC");
        customer2.getAllCustomer("Coca Cola");




        System.out.println("--------------------------------------");
        System.out.println("I removed Fanta, so there's left only Coca Cola");
        customer.deleteProductByName("Fanta", "Fanta");
        System.out.println("------------------------------------------");

        System.out.println("I removed Pepsi, so left only KFC");
        customer1.deleteProductByName("Pepsi", "Pepsi");
        System.out.println("--------------------------------------------");





        product11.checkPoint(products1);
        product11.checkPoint(products);
        System.out.println("--------------------------------------");

        System.out.println(product11.checkPoint2(products));
        System.out.println(product11.checkPoint2(products1));
        System.out.println("--------------------------------------");





        System.out.println(customer1.getAge2("Alina"));
        System.out.println("-------------------------------");


        System.out.println("The age of my customers buying products like Coca Cola and Fanta is");
        System.out.println(customer.getAge222(products));
        System.out.println("The age of customers buying products like Pepsi and KFC is");

        System.out.println(customer1.getAge222(products1));

        System.out.println("------------------------------");

        System.out.println(bank);
        bank.payment("AdelZh",  50);
        System.out.println("-------------------------------------");

        System.out.println(bank1);
        bank1.credit("AzizZh", 50000)}

public class Customer {
    private String name;
    Product[] product;
    Bank bank;
    Passport passport;

    public Customer(String name, Product[] product, Bank bank, Passport passport) {
        this.name = name;
        this.product = product;
        this.bank = bank;
        this.passport = passport;
    }



    public String getName() {
        return name;
    }

    public Product[] getCustomerOfMyProducts(String name) {
        for (int i = 0; i < product.length; i++) {
            if (product[i].getName().equals(name)) {
                System.out.println(product[i].getName());
                return product;
            }
        }
        return null;
    }


    public Product[] deleteProductByName(String name, String productName) {
        int indexToRemove = -1;
        for (int i = 0; i < product.length; i++) {

            if (product[i].getName().equals(productName) && product[i].getName().equals(name)) {
                indexToRemove = i;
                break;
            }
        }
        if (indexToRemove != -1) {
            Product[] arr = new Product[product.length - 1];
            int j = 0;
            for (int i = 0; i < product.length; i++) {
                if (i != indexToRemove) {
                    arr[j] = product[i];
                    j++;
                    System.out.println(product[i]);
                }
            }
            product = arr;
            product = Arrays.copyOf(arr, arr.length - 1);
        }
        return product;
    }

    public Product[] addProduct(Product productName) {
        for (Product pp : product) {
            if (!pp.equals(productName)) {
                Product[] ppp = new Product[product.length + 1];
                for (int i = 0; i < product.length; i++) {
                    ppp[i] = product[i];


                }
                ppp[product.length] = productName;
                product = Arrays.copyOf(ppp, ppp.length);
                return product;

            }
        }
        return null;
    }

    public Passport getAge2(String name) {
        for (int i = 0; i < product.length; i++) {
            if (product[i].getName().equals(name)) {
                return passport;
            }
        }
        return passport;
    }

    public int getAge222(Product[] product) {
        for (int i = 0; i < product.length; i++) {
            if (product[i].getName().equals(name)) {

            }
        }
        return passport.getDateOfBirth();
    }

    public String getAllCustomer(String name){
        for(int i=0; i<product.length; i++){
            if(product[i].getName().equals(name)){
                System.out.println(getName());
                return getName();
            }
        }
       return null;
    }




    @Override
    public String toString() {
        return "Customer{" +
                "name='" + name + '\'' +
                ", product=" + Arrays.toString(product) +
                ", bank=" + bank +
                ", passport=" + passport +
                '}';
    }
}
public class Bank {
    private String userName;
    private int password;
    private int totalMoney;





    public int getTotalMoney() {
        return totalMoney;
    }



    public Bank(String userName, int password, int totalMoney) {
        this.userName = userName;
        this.password = password;
        this.totalMoney = totalMoney;


    }
    public void payment(String name, int sum) {
        if (userName.equals(name)) {

            System.out.println((getTotalMoney() - sum));
        }

    }

    public void credit(String name, int sum){
        if(userName.equals(name)){
            System.out.println((getTotalMoney()+sum));
        }
    }



                @Override
    public String toString() {
        return "Bank{" +
                "userName='" + userName + '\'' +
                ", password=" + password +
                ", totalMoney=" + totalMoney +
                '}';
    }
}
public class Passport {
    private int dateOfBirth;
    private String country;
    private String gender;

    public Passport(int dateOfBirth, String country, String gender) {
        this.dateOfBirth = dateOfBirth;
        this.country = country;
        this.gender = gender;
    }

    public int getDateOfBirth() {
        return dateOfBirth;
    }





    @Override
    public String toString() {
        return "Passport{" +
                "dateOfBirth=" + dateOfBirth +
                ", country='" + country + '\'' +
                ", gender='" + gender + '\'' +
                '}';
    }


}
ublic class Product {

    private String name;
    private String description;
    private int price;
    private int count;
    private int madeInDate;
    private String isAlcoholic;
    Product[] products;

    public Product() {

    }

    public Product(String name, String description, int price, int count, int madeInDate, String isAlcoholic) {
        this.name = name;
        this.description = description;
        this.price = price;
        this.count = count;
        this.madeInDate = madeInDate;
        this.isAlcoholic = isAlcoholic;
    }

    public int getMadeInDate() {
        return madeInDate;
    }


    public String getIsAlcoholic() {
        return isAlcoholic;
    }

    public String getName() {
        return name;
    }


    @Override
    public String toString() {
        return "Product{" +
                "name='" + name + '\'' +
                ", description='" + description + '\'' +
                ", price=" + price +
                ", count=" + count +
                ", madeInDate=" + madeInDate +
                ", isAlcoholic='" + isAlcoholic + '\'' +
                '}';
    }

    public void checkPoint(Product[] products) {


        Scanner scan = new Scanner(System.in);
        String num = scan.next();
        for (int i = 0; i < products.length; i++) {
            if (products[i].getIsAlcoholic().equals(num)) {
                System.out.println(products[i] + " " + "is alcoholic");
            } else {
                System.out.println(products[i] + " " + "No it is not");
            }
        }
    }

    public String checkPoint2(Product[] products) {

        for (int i = 0; i < products.length; i++) {
            if (products[i].getMadeInDate() > 2022) {
                System.out.println(products[i] + " " + "It is good");
            } else {
                System.out.println(products[i] + " " + "it is not good");
            }
        }
        return "All beverages under 2023 year it is not good";
    }

}

